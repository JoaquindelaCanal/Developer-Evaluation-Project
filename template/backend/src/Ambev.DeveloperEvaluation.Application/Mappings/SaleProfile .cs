using Ambev.DeveloperEvaluation.Application.DTOs;
using Ambev.DeveloperEvaluation.Application.Sales.CreateSale;
using Ambev.DeveloperEvaluation.Domain.Entities;

using AutoMapper;

namespace Ambev.DeveloperEvaluation.Application.Mappings
{
    public class SaleProfile : Profile
    {
        public SaleProfile()
        {
            CreateMap<Sale, SaleDto>()
                .ForMember(dest => dest.Status, opt => opt.MapFrom(src => src.Status.ToString()));

            CreateMap<CreateSaleCommand, Sale>()
                .ForMember(dest => dest.Id, opt => opt.Ignore())
                .ForMember(dest => dest.TotalAmount, opt => opt.Ignore())
                .ForMember(dest => dest.Items, opt => opt.MapFrom(src => src.Items))
                .ForMember(dest => dest.Status, opt => opt.Ignore());

            CreateMap<SaleItemDto, SaleItem>()
                .ForMember(dest => dest.Id, opt => opt.Ignore()) // id generated by DB
                .ForMember(dest => dest.SaleId, opt => opt.Ignore()) // set by EF Core relationship
                .ForMember(dest => dest.ItemTotalAmount, opt => opt.Ignore()); // calculated in handler or domain

            // CreateMap<CreateSaleRequest, CreateSaleCommand>();
            // CreateMap<UpdateSaleRequest, UpdateSaleCommand>();
            // CreateMap<AddItemToSaleRequest, AddItemToSaleCommand>();
        }
    }
}
